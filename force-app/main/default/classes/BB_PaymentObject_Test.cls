@isTest
public class BB_PaymentObject_Test {
    @isTest
    static void testCallBBPaymentObject() {
        BB_PaymentObject bbPaymentObj = new BB_PaymentObject();
        Opportunity oppObj = new Opportunity(Name='testOpportunity',StageName='Checked', CloseDate=date.today());
        insert oppObj;
        String endPoint = bbPaymentObj.initializeRequestEndpoint();
        String body = BB_PaymentObject.initializeRequestBody(true, '3', oppObj.Id,null, null);
        String strResponse = '{"bb:GetBookingRS":{"@PrimaryLangID":"EN","bb:Success":{},"bb:HotelReservations":{"bb:HotelReservation":[{"bb:ResGlobalInfo":{ "bb:DepositPayments":{"bb:GuaranteePayment":[{"bb:AcceptedPayments":{"bb:AcceptedPayment":[{"bb:PaymentCard":{"bb:CustLoyalty":[{"@LoyalLevel":"Desc","@EffectiveDate": "2019-02-15"}]}}]}}]}}}]}}}';
        DataTableWrapper wrapper = bbPaymentObj.createTableFromResponse(strResponse);
		Test.setMock(HttpCalloutMock.class, new MockHttpResponseGenerator());
        Test.startTest();
        BB_PaymentObject.AcceptedPayment acceptedPaymentObj = BB_PaymentObject.loadPaymentInformation(oppObj.Id);
        Test.stopTest();
        List<String> bodyLst = new List<String>();
        bodyLst.add(fillResponse('Booking reference invalid'));
        bodyLst.add(fillResponse('Value does not match pattern(s)'));
        bodyLst.add(fillResponse('Value is shorter than minimum length'));
        for(String bodyObj : bodyLst) {
            DataTableWrapper badWrapper = bbPaymentObj.createTableFromBadResponse(bodyObj,400);
        }
        BB_PaymentObject.BBBookingResponseWrapper testWrapper = new BB_PaymentObject.BBBookingResponseWrapper();
        testWrapper.GetBookingRS = new BB_PaymentObject.GetBookingRS();
        testWrapper.GetBookingRS.PrimaryLangID = 'PrimaryLangID';
        testWrapper.GetBookingRS.TimeStamp = 'TimeStamp';
        testWrapper.GetBookingRS.Success = new BB_PaymentObject.Success();
        testWrapper.GetBookingRS.Errors = new BB_PaymentObject.Errors();
        testWrapper.GetBookingRS.Errors.Error = new List<BB_PaymentObject.Error>();
        BB_PaymentObject.Error errorObj = new BB_PaymentObject.Error();
        errorObj.Code = 'Code';
        errorObj.ShortText = 'ShortText';
        errorObj.Type = 'Type';
        testWrapper.GetBookingRS.HotelReservations = new BB_PaymentObject.HotelReservationsResponse();
        testWrapper.GetBookingRS.HotelReservations.HotelReservation = new List<BB_PaymentObject.HotelReservationResponse>();
        BB_PaymentObject.HotelReservationResponse HRObj = new BB_PaymentObject.HotelReservationResponse();
        HRObj.CreateDateTime = 'CreateDateTime';
        HRObj.ResStatus = 'ResStatus';
        HRObj.POS = new BB_PaymentObject.POS();
        HRObj.POS.Source = new List<BB_PaymentObject.Source>();
        BB_PaymentObject.Source sourceObj = new BB_PaymentObject.Source();
        sourceObj.RequestorID = new BB_PaymentObject.RequestorID();
        sourceObj.RequestorID.CompanyName = new BB_PaymentObject.CompanyName();
        sourceObj.RequestorID.CompanyName.CompanyShortName = 'CompanyShortName';
        sourceObj.RequestorID.CompanyName.Code = 'Code';
        sourceObj.RequestorID.CompanyName.CodeContext = 'CodeContext';
        sourceObj.RequestorID.CompanyName.body = 'body';
        sourceObj.BookingChannel = new BB_PaymentObject.BookingChannel();
        sourceObj.BookingChannel.Type = 'Type';
        sourceObj.BookingChannel.CompanyName = new BB_PaymentObject.CompanyName();
        HRObj.UniqueID = new List<BB_PaymentObject.UniqueID>();
        BB_PaymentObject.UniqueID uniqueIdObj = new BB_PaymentObject.UniqueID();
        uniqueIdObj.ID = 'ID';
        uniqueIdObj.Type = 'Type';
        HRObj.RoomStays = new BB_PaymentObject.RoomStays();
        HRObj.RoomStays.RoomStay = new List<BB_PaymentObject.RoomStay>();
        BB_PaymentObject.RoomStay roomStayObj = new BB_PaymentObject.RoomStay();
        roomStayObj.RoomTypes = new BB_PaymentObject.RoomTypes();
        roomStayObj.RoomTypes.RoomType = new List<BB_PaymentObject.RoomType>();
        BB_PaymentObject.RoomType roomTypeObj = new BB_PaymentObject.RoomType();
        roomTypeObj.NumberOfUnits = '2';
        roomTypeObj.RoomTypeCode = '2';
        roomStayObj.RatePlans = new BB_PaymentObject.RatePlans();
        roomStayObj.RatePlans.RatePlan = new List<BB_PaymentObject.RatePlan>();
        BB_PaymentObject.RatePlan ratePlanOBj = new BB_PaymentObject.RatePlan();
        ratePlanOBj.RatePlanCode = '2';
        roomStayObj.RoomRates = new BB_PaymentObject.RoomRates();
        roomStayObj.RoomRates.RoomRate = new List<BB_PaymentObject.RoomRate>();
        BB_PaymentObject.RoomRate roomRateOBj = new BB_PaymentObject.RoomRate();
        roomRateOBj.EffectiveDate = 'EffectiveDate';
        roomRateOBj.ExpireDate = 'ExpireDate';
        roomRateOBj.RatePlanCode = 'RatePlanCode';
        roomRateOBj.Rates = new BB_PaymentObject.Rates();
        roomRateOBj.Rates.Rate = new List<BB_PaymentObject.Rate>();
        BB_PaymentObject.Rate rateOBj = new BB_PaymentObject.Rate();
        rateOBj.EffectiveDate = 'EffectiveDate';
        rateOBj.ExpireDate = 'ExpireDate';
        rateOBj.Base = new BB_PaymentObject.Base();
        rateOBj.Base.AmountAfterTax = '100';
        rateOBj.Base.CurrencyCode = 'CurrencyCode';
        rateOBj.Base.Taxes = new BB_PaymentObject.Taxes();
        rateOBj.Base.Taxes.Amount = 'Amount';
        rateOBj.Base.Taxes.CurrencyCode = 'CurrencyCode';
        rateOBj.Base.Taxes.Tax = new List<BB_PaymentObject.Tax>();
        BB_PaymentObject.Tax taxObj = new BB_PaymentObject.Tax();
        taxObj.Amount = 'Amount';
        taxObj.Code = 'Code';
        taxObj.CurrencyCode = 'CurrencyCode';
        taxObj.Type = 'Type';
        rateOBj.Total = new BB_PaymentObject.Total();
        rateOBj.Total.AmountAfterTax = '100';
        rateOBj.Total.CurrencyCode = 'CurrencyCode';
        rateOBj.Total.AmountIncludingMarkup = 'AmountIncludingMarkup';
        rateOBj.Total.Taxes = new BB_PaymentObject.Taxes();
        roomStayObj.GuestCounts = new BB_PaymentObject.GuestCounts();
        roomStayObj.GuestCounts.GuestCount = new List<BB_PaymentObject.GuestCount>();
        BB_PaymentObject.GuestCount guestCountObj = new BB_PaymentObject.GuestCount();
        guestCountObj.AgeQualifyingCode = 'AgeQualifyingCode';
        guestCountObj.Count = 'Count';
        roomStayObj.DepositPayments = new BB_PaymentObject.DepositPayments();
        roomStayObj.DepositPayments.GuaranteePayment = new List<BB_PaymentObject.GuaranteePayment>();
        BB_PaymentObject.GuaranteePayment guaranteePaymentObj = new BB_PaymentObject.GuaranteePayment();
        guaranteePaymentObj.GuaranteeType = 'type';
        guaranteePaymentObj.PaymentCode = 'code';
        guaranteePaymentObj.PolicyCode = 'code';
        guaranteePaymentObj.AmountPercent = new BB_PaymentObject.AmountPercent();
        guaranteePaymentObj.AmountPercent.Percent = '50';
        guaranteePaymentObj.AcceptedPayments = new BB_PaymentObject.AcceptedPayments();
        guaranteePaymentObj.AcceptedPayments.AcceptedPayment = new List<BB_PaymentObject.AcceptedPayment>();
        BB_PaymentObject.AcceptedPayment paymentObj = new BB_PaymentObject.AcceptedPayment();
        paymentObj.PaymentCard = new BB_PaymentObject.PaymentCard();
        paymentObj.PaymentCard.MaskedCardNumber = '123';
        paymentObj.PaymentCard.CompanyCardReference = '123';
        paymentObj.PaymentCard.Remark = 'Remark';
        paymentObj.PaymentCard.EncryptionKey = 'EncryptionKey';
        paymentObj.PaymentCard.CardHolderName = 'test';
        paymentObj.PaymentCard.CardIssuerName = new BB_PaymentObject.CardIssuerName();
        paymentObj.PaymentCard.CardIssuerName.BankID = 'BankID';
        roomStayObj.CancelPenalties = new BB_PaymentObject.CancelPenalties();
        roomStayObj.CancelPenalties.CancelPenalty = new List<BB_PaymentObject.CancelPenalty>();
        BB_PaymentObject.CancelPenalty cancelPenaltyObj = new BB_PaymentObject.CancelPenalty();
        cancelPenaltyObj.ConfirmClassCode = 'ConfirmClassCode';
        roomStayObj.Discount = new BB_PaymentObject.Discount();
        roomStayObj.Discount.AmountBeforeTax = 'AmountBeforeTax';
        roomStayObj.Discount.AmountAfterTax = 'AmountAfterTax';
        roomStayObj.Discount.CurrencyCode = 'CurrencyCode';
        roomStayObj.Discount.Percent = 'Percent';
        roomStayObj.Discount.DiscountReason = new BB_PaymentObject.DiscountReason();
        roomStayObj.Discount.DiscountReason.Name = 'Name';
        roomStayObj.Total = new BB_PaymentObject.Total();
        roomStayObj.BasicPropertyInfo = new BB_PaymentObject.BasicPropertyInfo();
        roomStayObj.BasicPropertyInfo.HotelCode = 'HotelCode';
        roomStayObj.TPA_Extensions = new BB_PaymentObject.TPA_Extensions();
        roomStayObj.TPA_Extensions.ListBookingStatuts = new List<BB_PaymentObject.ListBookingStatuts>();
        BB_PaymentObject.ListBookingStatuts lstBookingStts = new BB_PaymentObject.ListBookingStatuts();
        lstBookingStts.Description = 'Description';
        lstBookingStts.E_Num_Channel = 'E_Num_Channel';
        lstBookingStts.Enum_Status = 'Enum_Status';
        lstBookingStts.ID = 'ID';
        lstBookingStts.Status_Date = 'Status_Date';
        roomStayObj.TPA_Extensions.UniqueID = new BB_PaymentObject.UniqueID();
        roomStayObj.TPA_Extensions.Is_Rate_Included = 'true';
        roomStayObj.ResGuestRPHs = new BB_PaymentObject.ResGuestRPHs();
        roomStayObj.ResGuestRPHs.ResGuestRPH = new List<BB_PaymentObject.ResGuestRPH>();
        BB_PaymentObject.ResGuestRPH resGuestRPHObj = new BB_PaymentObject.ResGuestRPH();
        resGuestRPHObj.RPH = 'RPH';
        roomStayObj.BookingRules = new BB_PaymentObject.BookingRules();
        roomStayObj.BookingRules.BookingRule = new List<BB_PaymentObject.BookingRule>();
        BB_PaymentObject.BookingRule bookingRuleObj = new BB_PaymentObject.BookingRule();
        bookingRuleObj.Code = 'code';
        bookingRuleObj.CodeContext = 'codeContext';
        bookingRuleObj.AddtionalRules = new BB_PaymentObject.AddtionalRules();
        bookingRuleObj.AddtionalRules.AdditionalRule = new List<BB_PaymentObject.AdditionalRule>();
        BB_PaymentObject.AdditionalRule addRuleObj = new BB_PaymentObject.AdditionalRule();
        addRuleObj.AdditionalRule = 'AdditionalRule';
        HRObj.ResGuests = new BB_PaymentObject.ResGuests();
        HRObj.ResGuests.ResGuest = new List<BB_PaymentObject.ResGuest>();
        BB_PaymentObject.ResGuest resGuestObj = new BB_PaymentObject.ResGuest();
        resGuestObj.AgeQualifyingCode = '1';
        resGuestObj.ResGuestRPH = 'ResGuestRPH';
        resGuestObj.Profiles = new BB_PaymentObject.Profiles();
        resGuestObj.Profiles.ProfileInfo = new List<BB_PaymentObject.ProfileInfo>();
        BB_PaymentObject.ProfileInfo profileInfoObj = new BB_PaymentObject.ProfileInfo();
        profileInfoObj.Profile = new BB_PaymentObject.Profile();
        profileInfoObj.Profile.Customer = new BB_PaymentObject.Customer();
        profileInfoObj.Profile.Customer.PersonName = new List<BB_PaymentObject.PersonName>();
        BB_PaymentObject.PersonName personNameObj = new BB_PaymentObject.PersonName();
        personNameObj.GivenName = new List<String>();
        personNameObj.Surname = 'Surname';
        profileInfoObj.Profile.Customer.Telephone = new List<BB_PaymentObject.Telephone>();
        BB_PaymentObject.Telephone telephoneObj = new BB_PaymentObject.Telephone();
        telephoneObj.PhoneLocationType = 'type';
        telephoneObj.PhoneNumber = '0123456';
        telephoneObj.RPH = 'RPH';
        profileInfoObj.Profile.Customer.Email = new List<BB_PaymentObject.Email>();
        BB_PaymentObject.Email emailObj = new BB_PaymentObject.Email();
        emailObj.body = 'body';
        emailObj.RPH = 'RPH';
        profileInfoObj.Profile.UserID = new List<BB_PaymentObject.UserID>();
        BB_PaymentObject.UserID userIdObj = new BB_PaymentObject.UserID();
        userIdObj.ID = 'ID';
        
        BB_PaymentObject.ResGlobalInfoResponse resp = New BB_PaymentObject.ResGlobalInfoResponse();
        resp.GuestCounts = New BB_PaymentObject.GuestCounts();
        resp.TimeSpan  = New BB_PaymentObject.TimeSpan();
        resp.Comments  = New BB_PaymentObject.Comments();
        resp.DepositPayments  = New BB_PaymentObject.DepositPayments();
        resp.Total  = New BB_PaymentObject.Total();
        resp.HotelReservationIDs  = New BB_PaymentObject.HotelReservationIDs();
        resp.Profiles = New BB_PaymentObject.Profiles();
        resp.BookingRules  = New BB_PaymentObject.BookingRules();
    }
    
    static String fillResponse(string resBody) {
        String reqBody = '{"bb:GetBookingRS":{"bb:Errors":{"bb:Error":[{"*body":"[ISC.0082.9469]' + resBody + '/bb:HotelReservations/bb:HotelReservation[0]/bb:ResGlobalInfo/bb:HotelReservationIDs/bb:HotelReservationID[0]/@ResID_Type"}]}}}';
        return reqBody;
    }
}